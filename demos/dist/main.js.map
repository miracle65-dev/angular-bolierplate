{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/communication/communication-routing.module.ts","webpack:///./src/app/communication/communication.component.html","webpack:///./src/app/communication/communication.component.ts","webpack:///./src/app/communication/communication.module.ts","webpack:///./src/app/communication/customer-details/customer-details.component.html","webpack:///./src/app/communication/customer-details/customer-details.component.ts","webpack:///./src/app/communication/customers-list/customers-list.component.css","webpack:///./src/app/communication/customers-list/customers-list.component.html","webpack:///./src/app/communication/customers-list/customers-list.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/services/cloner.service.ts","webpack:///./src/app/core/services/data.service.ts","webpack:///./src/app/core/services/event-bus.service.ts","webpack:///./src/app/core/services/subject.service.ts","webpack:///./src/app/pipes-functions/pipes-functions-routing.module.ts","webpack:///./src/app/pipes-functions/pipes-functions.component.html","webpack:///./src/app/pipes-functions/pipes-functions.component.ts","webpack:///./src/app/pipes-functions/pipes-functions.module.ts","webpack:///./src/app/planning/planning-routing.module.ts","webpack:///./src/app/planning/planning.component.html","webpack:///./src/app/planning/planning.component.ts","webpack:///./src/app/planning/planning.module.ts","webpack:///./src/app/shared/addtax-memo.pipe.ts","webpack:///./src/app/shared/addtax.pipe.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/structuring-components/customer-details/customer-details.component.html","webpack:///./src/app/structuring-components/customer-details/customer-details.component.ts","webpack:///./src/app/structuring-components/customers-list/customers-list.component.css","webpack:///./src/app/structuring-components/customers-list/customers-list.component.html","webpack:///./src/app/structuring-components/customers-list/customers-list.component.ts","webpack:///./src/app/structuring-components/structuring-components-routing.module.ts","webpack:///./src/app/structuring-components/structuring-components.component.html","webpack:///./src/app/structuring-components/structuring-components.component.ts","webpack:///./src/app/structuring-components/structuring-components.module.ts","webpack:///./src/app/subjects/subjects-routing.module.ts","webpack:///./src/app/subjects/subjects.component.html","webpack:///./src/app/subjects/subjects.component.ts","webpack:///./src/app/subjects/subjects.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./customers/customers.module\": [\n\t\t\"./src/app/features-modules/customers/customers.module.ts\",\n\t\t\"customers-customers-module\"\n\t],\n\t\"./orders/orders.module\": [\n\t\t\"./src/app/features-modules/orders/orders.module.ts\",\n\t\t\"orders-orders-module\"\n\t],\n\t\"app/features-modules/features-modules.module\": [\n\t\t\"./src/app/features-modules/features-modules.module.ts\",\n\t\t\"app-features-modules-features-modules-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlanningComponent } from './planning/planning.component';\nimport { FeaturesModulesComponent } from './features-modules/features-modules.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch:'full', redirectTo: '/planning' },\n  { path: 'features-modules', loadChildren: 'app/features-modules/features-modules.module#FeaturesModulesModule' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n}\n\n","module.exports = \".circle {\\n    height:20px;\\n    width:20px;\\n    border-radius: 50px;\\n    padding-left:6px;\\n    background: red;\\n    color: white;\\n    margin-top: 15px;\\n    margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsbUJBQW1CO0NBQ3RCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2lyY2xlIHtcbiAgICBoZWlnaHQ6MjBweDtcbiAgICB3aWR0aDoyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgcGFkZGluZy1sZWZ0OjZweDtcbiAgICBiYWNrZ3JvdW5kOiByZWQ7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIG1hcmdpbi10b3A6IDE1cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufSJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"navbar-header\\\">\\n    <a href=\\\"#/\\\">\\n      <img src=\\\"assets/angular.png\\\" class=\\\"logo\\\" />\\n    </a>\\n  </div>\\n  <ul class=\\\"nav navbar-nav nav-pills\\\">\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"/planning\\\">Planning</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"/features-modules\\\">Features/Modules</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"/structuring-components\\\">Components</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"/pipes-functions\\\">Pipes/Functions</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"/communication\\\">Communication</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"/subjects\\\">Subjects</a>\\n    </li>\\n  </ul>\\n  <strong *ngIf=\\\"customers\\\" class=\\\"pull-right circle\\\">\\n    {{ customers.length }}\\n  </strong>\\n</nav>\\n\\n\\n<strong *ngIf=\\\"customer\\\" class=\\\"pull-right\\\" style=\\\"padding-right: 10px;\\\">\\n  Current Customer: {{ customer.name }}\\n</strong>\\n\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\"","import { Component, OnInit } from '@angular/core';\n\nimport { EventBusService, Events } from './core/services/event-bus.service';\nimport { Customer } from './shared/interfaces';\nimport { Subscription } from 'rxjs';\nimport { DataService } from './core/services/data.service';\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\n\n@AutoUnsubscribe()\n@Component({ \n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent implements OnInit { \n  customers: Customer[];\n  customer: Customer;\n  eventbusSub: Subscription;\n  customersChangedSub: Subscription;\n  \n  constructor(private eventbus: EventBusService, private dataService: DataService) { }\n\n  ngOnInit() {\n    //Example of using an event bus to provide loosely coupled communication (mediator pattern)\n    this.eventbusSub = this.eventbus.on(Events.CustomerSelected, (cust => this.customer = cust));\n\n    //Example of using BehaviorSubject to be notified when a service changes\n    this.customersChangedSub = this.dataService.customersChanged$.subscribe(custs => this.customers = custs);\n  }\n\n  ngOnDestroy() {\n    // AutoUnsubscribe decorator above makes these calls unnecessary\n    // this.eventbusSub.unsubscribe();\n    // this.customersChangedSub.unsubscribe();\n  }\n  \n}\n","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent }  from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PlanningModule } from './planning/planning.module';\nimport { StructuringComponentsModule } from './structuring-components/structuring-components.module';\nimport { CoreModule } from './core/core.module';\nimport { CommunicationModule } from './communication/communication.module';\nimport { PipesFunctionsModule } from './pipes-functions/pipes-functions.module';\nimport { SubjectsModule } from './subjects/subjects.module';\n\n@NgModule({\n  imports: [ \n    BrowserModule, \n    CoreModule,\n    AppRoutingModule,\n    PlanningModule,\n    StructuringComponentsModule,\n    PipesFunctionsModule,\n    CommunicationModule,\n    SubjectsModule\n  ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CommunicationComponent } from './communication.component';\n\nconst routes: Routes = [\n    { path: 'communication', component: CommunicationComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class CommunicationRoutingModule {\n  static components = [ CommunicationComponent ];\n}\n\n","module.exports = \"<h1>Services/Components Communication</h1>\\n<br />\\n<ul>\\n    <li>An \\\"Event Bus\\\" can provide a loosely coupled way to communicate between objects.</li>\\n    <li>Services can expose a Subject/BehaviorSubject/ReplaySubject that other services/components can subscribe to for changes.</li>\\n    <li>State management solutions such as Ngrx or Mobx can also be used.</li>\\n</ul>\\n<br />\\n<button (click)=\\\"addCustomerPush()\\\" class=\\\"btn btn-danger\\\">Add Customer (push only)</button>&nbsp;&nbsp;\\n<button (click)=\\\"addCustomerClone()\\\" class=\\\"btn btn-primary\\\">Add Customer (push a clone)</button>\\n\\n<br />\\n<br />\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <app-customers-list [customers]=\\\"customers\\\" (customerSelected)=\\\"selected($event)\\\"></app-customers-list>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <app-customer-details [customer]=\\\"customer\\\"></app-customer-details>\\n    </div>\\n</div>\\n\\n<br />\\n<br />\\n<h4>Notes:</h4>\\n<ul>\\n    <li>This example shows how services and subjects can be used to provide a communication mechanism for \\n            components. Click one of the buttons below and note how the customers count number in the upper-right corner \\n            changes (event bus is used). Note that when a customer is selected in the \\\"Customers\\\" presentation component the details display\\n            AND the customer details display below the navbar (BehaviorSubject is used).</li>\\n    <li>The \\\"Add Customer (push only)\\\" button will call a service to add a customer but the returned customers data will not display properly and will not trigger ngOnChanges in the presentation component since the customers array itself doesn't change.</li>\\n    <li>The \\\"Add Customer (push a clone)\\\" will call a service to add a customer but the service will return a clone of the customers data. The presentation component's ngOnChanges will fire and the data will display correctly as a result.</li>\\n</ul>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Customer } from '../shared/interfaces';\nimport { DataService } from '../core/services/data.service';\nimport { SubSink } from 'subsink';\n\n@Component({\n  selector: 'app-communication',\n  templateUrl: './communication.component.html'\n})\nexport class CommunicationComponent implements OnInit, OnDestroy {\n\n  customers: Customer[] = [];\n  customer: Customer;\n  private subs = new SubSink();\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.subs.sink = this.dataService.getCustomers()\n        .subscribe((custs: Customer[]) => this.customers = custs);\n  }\n\n  selected(cust: Customer) {\n    this.customer = cust;\n  }\n\n  addCustomerPush() {\n    this.dataService.addCustomer()\n        .subscribe((custs: Customer[]) => this.customers = custs);\n  }\n\n  addCustomerClone() {\n    this.dataService.addCustomerClone()\n        .subscribe((custs: Customer[]) => this.customers = custs);\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CommunicationRoutingModule } from './communication-routing.module';\nimport { CustomersListComponent } from './customers-list/customers-list.component';\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CommunicationRoutingModule  \n  ],\n  declarations: [ CommunicationRoutingModule.components, CustomersListComponent, CustomerDetailsComponent ]\n})\nexport class CommunicationModule { }\n","module.exports = \"<h4>Details</h4>\\n<table *ngIf=\\\"customer\\\" class=\\\"table\\\">\\n  <tr>\\n    <td>Name: </td>\\n    <td>{{ customer.name }}</td>\\n  </tr>\\n  <tr>\\n    <td>City: </td>\\n    <td>{{ customer.city }}</td>\\n  </tr>\\n  <tr>\\n    <td>Age: </td>\\n    <td>{{ customer.age }}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Customer } from '../../shared/interfaces';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  @Input() customer: Customer;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"tr {\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbXVuaWNhdGlvbi9jdXN0b21lcnMtbGlzdC9jdXN0b21lcnMtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tbXVuaWNhdGlvbi9jdXN0b21lcnMtbGlzdC9jdXN0b21lcnMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidHIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","module.exports = \"<h4>Customers</h4>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n  </tr>\\n  <tr *ngFor=\\\"let cust of customers\\\" (click)=\\\"selectCustomer(cust)\\\">\\n    <td>{{ cust.name }}</td>\\n  </tr>\\n</table>\\n<br />\\n<div *ngFor=\\\"let msg of logMessages\\\">{{ msg }}</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\nimport { Customer } from '../../shared/interfaces';\nimport { EventBusService, EmitEvent, Events } from '../../core/services/event-bus.service';\n\n@Component({\n  selector: 'app-customers-list',\n  templateUrl: './customers-list.component.html',\n  styleUrls: [ './customers-list.component.css' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomersListComponent implements OnInit {\n  @Input() customers: Customer[];\n  @Output() customerSelected = new EventEmitter<Customer>();\n  logMessages: string[] = [];\n\n  constructor(private eventbus: EventBusService) { }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges['customers']) {\n      this.logMessages.push('ngOnChanges Fired: Customers changed');\n    }\n  }\n\n  selectCustomer(cust: Customer) {\n    this.customerSelected.emit(cust);\n    this.eventbus.emit(new EmitEvent(Events.CustomerSelected, cust));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DataService } from './services/data.service';\nimport { ClonerService } from './services/cloner.service';\nimport { EventBusService } from './services/event-bus.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [ DataService, ClonerService, EventBusService ]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport * as clone from 'clone';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClonerService {\n\n    deepClone<T>(value) {\n        return clone<T>(value);\n    }\n\n}","import { Injectable } from '@angular/core';\n\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Customer, Product } from '../../shared/interfaces';\nimport { ClonerService } from './cloner.service';\nimport { List } from 'immutable';\n\n@Injectable()\nexport class DataService {\n\n  customers: Customer[] = [\n    {\n      id: 1,\n      name: 'John Doe',\n      city: 'Phoenix',\n      age: 42\n    },\n    {\n      id: 2,\n      name: 'Jane Doe',\n      city: 'Seattle',\n      age: 30\n    },\n    {\n      id: 3,\n      name: 'Michelle Thompson',\n      city: 'Orlando',\n      age: 22\n    }\n  ];\n\n  products: Product[] =  [\n    {\n      id: 1,\n      name: 'Basketball',\n      price: 29.99\n    },\n    {\n      id: 2,\n      name: 'XBox',\n      price: 249.99\n    },\n    {\n      id: 3,\n      name: 'Nintendo Switch',\n      price: 249.99\n    },\n    {\n      id: 4,\n      name: 'Bat',\n      price: 29.99\n    },\n    {\n      id: 5,\n      name: 'Glove',\n      price: 29.99\n    },\n    {\n      id: 6,\n      name: 'Cell Phone',\n      price: 799.99\n    },\n    {\n      id: 7,\n      name: 'Cell Phone Service',\n      price: 49.99\n    },\n    {\n      id: 8,\n      name: 'Laptop',\n      price: 999.99\n    },\n    {\n      id: 9,\n      name: 'Bluetooth Speaker',\n      price: 69.99\n    },\n    {\n      id: 10,\n      name: 'TV',\n      price: 1599.99\n    }\n  ];\n\n  immutableCustomers = List<Customer>();\n  immutableProducts = List<Product>();\n\n  private customersSubject$ = new BehaviorSubject<Customer[]>(this.customers);\n  customersChanged$ = this.customersSubject$.asObservable();\n\n  constructor(private cloner: ClonerService) { }\n\n  getCustomers() : Observable<Customer[]> {\n    // Use the following code if using immutable.js\n    // return of(this.immutableCustomers.toJS());\n\n    return of(this.customers);\n  }\n\n  getProducts() : Observable<Product[]> {\n    // Use this for immutable.js\n    // return of(this.immutableProducts.toJS());\n\n    return of(this.products);\n  }\n\n  addCustomer() : Observable<Customer[]> {\n    let id = this.customers[this.customers.length - 1].id + 1;\n    this.customers.push({\n      id: id,\n      name: 'New Customer ' + id,\n      city: 'Somewhere',\n      age: id * 5\n    });\n    this.customersSubject$.next(this.customers);\n    return of(this.customers);\n  }\n\n  addCustomerClone() : Observable<Customer[]> {\n    return this.addCustomer().pipe(\n      map(custs => {\n        return this.cloner.deepClone(custs);\n      })\n    )\n  }\n\n  addCustomerImmutable() : Observable<Customer[]> {\n    let id = this.immutableCustomers[this.immutableCustomers.size - 1].id + 1;\n    this.immutableCustomers.push({\n      id: id,\n      name: 'New Customer ' + id,\n      city: 'Somewhere',\n      age: id * 5\n    });\n    this.customersSubject$.next(this.customers);\n    return of(this.immutableCustomers.toJS());\n  }\n\n  addProduct(newProduct: Product) {\n    this.products.push({\n      id: this.products.length,\n      name: newProduct.name,\n      price: +newProduct.price\n    });\n    return of(this.products);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Subscription, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable()\nexport class EventBusService {\n\n    private subject = new Subject<any>();\n\n    constructor() { }\n\n    on(event: Events, action: any): Subscription {\n         return this.subject\n              .pipe(\n                    filter((e: EmitEvent) => {\n                      return e.name === event;\n                    }),\n                    map((event: EmitEvent) => {\n                      return event.value;\n                    })\n                  )\n                    .subscribe(action);\n    }\n\n    emit(event: EmitEvent) {\n        this.subject.next(event);\n    }\n}\n\nexport class EmitEvent {\n\n  constructor(public name: any, public value?: any) { }\n\n}\n\nexport enum Events {\n  CustomerSelected\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject, BehaviorSubject, ReplaySubject, AsyncSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  customers = [];\n  intervalIds = [];\n  private subject$: Subject<ICustomer>;\n  subjectObservable$: Observable<ICustomer>;\n\n  private behaviorSubject$;\n  behaviorSubjectObservable$: Observable<ICustomer>;\n\n  private replaySubject$: ReplaySubject<ICustomer>;\n  replaySubjectObservable$: Observable<ICustomer>;\n\n  private asyncSubject$: AsyncSubject<ICustomer>;\n  asyncSubjectObservable$: Observable<ICustomer>;\n\n  constructor() { }\n\n  start() {\n    this.initSubjects();\n\n    // simulate array getting new data from a data source\n    let intervalId = setInterval(() => {\n      let len = this.customers.length;\n      this.customers.push({\n        name: 'Customers ' + len,\n        city: 'City ' + len\n      });\n      let clone = JSON.parse(JSON.stringify(this.customers));\n      this.subject$.next(clone);\n      this.behaviorSubject$.next(clone);\n      this.replaySubject$.next(clone);\n      this.asyncSubject$.next(clone);\n\n      if (this.customers.length > 10) {\n        this.asyncSubject$.complete();\n      }\n    }, 3000);\n\n    this.intervalIds.push(intervalId);\n  }\n\n  initSubjects() {\n    this.subject$ = new Subject();\n    this.subjectObservable$ = this.subject$.asObservable();\n\n    this.behaviorSubject$ = new BehaviorSubject(this.customers);\n    this.behaviorSubjectObservable$ = this.behaviorSubject$.asObservable();\n\n    this.replaySubject$ = new ReplaySubject();\n    this.replaySubjectObservable$ = this.replaySubject$.asObservable();\n\n    this.asyncSubject$ = new AsyncSubject();\n    this.asyncSubjectObservable$ = this.asyncSubject$.asObservable();\n  }\n\n}\n\nexport interface ICustomer {\n  name: string;\n  city: string;\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PipesFunctionsComponent } from './pipes-functions.component';\n\nconst routes: Routes = [\n    { path: 'pipes-functions', component: PipesFunctionsComponent }\n];\n\n@NgModule({\n    imports: [ RouterModule.forChild(routes) ],\n    exports: [ RouterModule ]\n})\nexport class PipesFunctionsRoutingModule {\n    static components = [\n        PipesFunctionsComponent\n    ]\n}","module.exports = \"<h1>Pipes versus Functions</h1>\\nThis example shows how using pipes (where possible) instead of functions in a template can enhance performance. See the console.\\n<br /><br />\\n<h4>Add Product</h4>\\nName: <input type=\\\"text\\\" (input)=\\\"newProduct.name = $event.target.value\\\" [value]=\\\"newProduct.name\\\" /> \\n<br />\\nPrice: <input type=\\\"text\\\" (input)=\\\"newProduct.price = $event.target.value\\\" [value]=\\\"newProduct.price\\\" /> \\n<br /><br />\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"addProduct()\\\">Add Product</button>\\n<br />\\n\\n<h3>Calling a Function from a Template</h3>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n    <th>Total</th>\\n  </tr>\\n  <tr *ngFor=\\\"let product of products$ | async\\\">\\n    <td>{{ product.name }}</td>\\n    <td>{{ addTax(product.price) | currency }}</td>\\n  </tr>\\n</table>\\n\\n<h3>Using a Pipe in a Template</h3>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n    <th>Total</th>\\n  </tr>\\n  <tr *ngFor=\\\"let product of products$ | async\\\">\\n    <td>{{ product.name }}</td>\\n    <td>{{ product.price | addtax | currency }}</td>\\n  </tr>\\n</table>\\n\\n<h3>Using a Pipe (and @memo() decorator) in a Template</h3>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n    <th>Total</th>\\n  </tr>\\n  <tr *ngFor=\\\"let product of products$ | async\\\">\\n    <td>{{ product.name }}</td>\\n    <td>{{ product.price | addtaxmemo | currency }}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DataService } from '../core/services/data.service';\nimport { Product } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-pipes-functions',\n  templateUrl: './pipes-functions.component.html',\n  styles: []\n})\nexport class PipesFunctionsComponent implements OnInit {\n  products$: Observable<Product[]>;\n  tax = .08;\n  newProduct: Product = {\n    id: null,\n    name: '',\n    price: null\n  };\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.products$ = this.dataService.getProducts();\n  }\n\n  addTax(price: number) {\n    console.log('addTax() function called');\n    return price + (price * this.tax);\n  }\n\n  addProduct() {\n    this.products$ = this.dataService.addProduct(this.newProduct);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PipesFunctionsRoutingModule } from './pipes-functions-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    PipesFunctionsRoutingModule\n  ],\n  declarations: [ PipesFunctionsRoutingModule.components ]\n})\nexport class PipesFunctionsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PlanningComponent } from './planning.component';\n\nconst routes: Routes = [\n    { path: 'planning', component: PlanningComponent }\n];\n\n@NgModule({\n    imports: [ RouterModule.forChild(routes) ],\n    exports: [ RouterModule ]\n})\nexport class PlanningRoutingModule {\n    static components = [\n        PlanningComponent\n    ]\n}","module.exports = \"<h1>Planning Your Architecture</h1>\\n<iframe src=\\\"https://docs.google.com/presentation/d/e/2PACX-1vT9WrzJ4gh3tIJ-V0hx9ogMk6fpm0A7SaIo0QBQa5_er5r7yXWyi7hiYkjZkT7O44tKpW7Tot-tery8/embed?start=false&loop=false&delayms=3000\\\" \\n    frameborder=\\\"0\\\" \\n    width=\\\"900\\\" height=\\\"535\\\" allowfullscreen=\\\"true\\\" mozallowfullscreen=\\\"true\\\" \\n    webkitallowfullscreen=\\\"true\\\"></iframe>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-planning',\n    templateUrl: 'planning.component.html'\n})\nexport class PlanningComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() { \n\n    }\n\n}","import { NgModule } from '@angular/core';\n\nimport { PlanningRoutingModule } from './planning-routing.module';\nimport { PlanningComponent } from './planning.component';\n\n@NgModule({\n    imports: [ PlanningRoutingModule ],\n    declarations: [ PlanningRoutingModule.components ],\n})\nexport class PlanningModule { }","import { Pipe, PipeTransform } from '@angular/core';\nimport memo from 'memo-decorator';\n\n@Pipe({\n  name: 'addtaxmemo'\n})\nexport class AddTaxMemoPipe implements PipeTransform {\n  @memo()\n  transform(price: number): number {\n    if (price) {\n      return this.getTotalPrice(price);\n    }\n    return price;\n  }\n\n  getTotalPrice(price: number) {\n    console.log('addtaxmemo pipe called');\n    let total = price + (price * .08);\n    return total;\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'addtax'\n})\nexport class AddTaxPipe implements PipeTransform {\n  transform(price: number): number {\n    if (price) {\n      return this.getTotalPrice(price);\n    }\n    return price;\n  }\n\n  getTotalPrice(price: number) {\n    console.log('addtax pipe called');\n    let total = price + (price * .08);\n    return total;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddTaxPipe } from './addtax.pipe';\nimport { AddTaxMemoPipe } from './addtax-memo.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [ AddTaxPipe, AddTaxMemoPipe ],\n  declarations: [ AddTaxPipe, AddTaxMemoPipe ]\n})\nexport class SharedModule { }\n","module.exports = \"<h4>Details</h4>\\n<table *ngIf=\\\"customer\\\" class=\\\"table\\\">\\n  <tr>\\n    <td>Name: </td>\\n    <td>{{ customer.name }}</td>\\n  </tr>\\n  <tr>\\n    <td>City: </td>\\n    <td>{{ customer.city }}</td>\\n  </tr>\\n  <tr>\\n    <td>Age: </td>\\n    <td>{{ customer.age }}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Customer } from '../../shared/interfaces';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  @Input() customer: Customer;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"tr {\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RydWN0dXJpbmctY29tcG9uZW50cy9jdXN0b21lcnMtbGlzdC9jdXN0b21lcnMtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvc3RydWN0dXJpbmctY29tcG9uZW50cy9jdXN0b21lcnMtbGlzdC9jdXN0b21lcnMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidHIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","module.exports = \"<h4>Customers</h4>\\n<table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Name</th>\\n  </tr>\\n  <tr *ngFor=\\\"let cust of customers\\\" (click)=\\\"selectCustomer(cust)\\\">\\n    <td>{{ cust.name }}</td>\\n  </tr>\\n</table>\\n<br />\\n<div *ngFor=\\\"let msg of logMessages\\\">{{ msg }}</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\nimport { Customer } from '../../shared/interfaces';\n\n@Component({\n  selector: 'app-customers-list',\n  templateUrl: './customers-list.component.html',\n  styleUrls: [ './customers-list.component.css' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomersListComponent implements OnInit {\n  @Input() customers: Customer[];\n  @Output() customerSelected = new EventEmitter<Customer>();\n  logMessages: string[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges['customers']) {\n      this.logMessages.push('Customers changed');\n    }\n  }\n\n  selectCustomer(cust: Customer) {\n    this.customerSelected.emit(cust);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StructuringComponentsComponent } from './structuring-components.component';\n\nconst routes: Routes = [\n    { path: 'structuring-components', component: StructuringComponentsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class StructuringComponentsRoutingModule {\n  static components = [ StructuringComponentsComponent ];\n}\n\n","module.exports = \"<h1>Container and Presentation Components</h1>\\n<ul>\\n    <li>Container components act as the \\\"manager\\\" for presentation components. Responsible for managing state.</li>\\n    <li>Presentation components are handed state and are responsible for presenting/rendering it.</li>\\n    <li>Recommending setting changeDetection to ChangeDetectionStrategy.OnPush</li>\\n</ul>\\n<br />\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <app-customers-list [customers]=\\\"customers\\\" (customerSelected)=\\\"selected($event)\\\"></app-customers-list>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <app-customer-details [customer]=\\\"customer\\\"></app-customer-details>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Customer } from '../shared/interfaces';\nimport { DataService } from '../core/services/data.service';\n\n@Component({\n  selector: 'app-structuring-components',\n  templateUrl: './structuring-components.component.html'\n})\nexport class StructuringComponentsComponent implements OnInit {\n\n  customers: Customer[] = [];\n  customer: Customer;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.dataService.getCustomers()\n        .subscribe((custs: Customer[]) => this.customers = custs);\n  }\n\n  selected(cust: Customer) {\n    this.customer = cust;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StructuringComponentsRoutingModule } from './structuring-components-routing.module';\nimport { CustomersListComponent } from './customers-list/customers-list.component';\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StructuringComponentsRoutingModule  \n  ],\n  declarations: [ StructuringComponentsRoutingModule.components, CustomersListComponent, CustomerDetailsComponent ]\n})\nexport class StructuringComponentsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SubjectsComponent } from './subjects.component';\n\nconst routes: Routes = [\n    { path: 'subjects', component: SubjectsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class SubjectsRoutingModule {\n  static components = [ SubjectsComponent ];\n}","module.exports = \"<h1>Using RxJS Subjects</h1>\\nAll of the functionality for this demo is in core/data.service.ts and app.component.ts. Click Start to begin.\\n<br /><br />\\n\\n<button (click)=\\\"start()\\\">Start</button>\\n\\n<h2 class=\\\"status\\\">Status: {{ status }}</h2>\\n\\n<h3>Subject Observable Data</h3>\\n<ul>\\n  <li *ngFor=\\\"let data of subjectObservableData\\\">{{ data.length }}</li>\\n</ul>\\n\\n<br />\\n<h3>BehaviorSubject Observable Data</h3>\\nNote how this picks up the last value emitted event though it subscribed after the value was sent out. That's because BehaviorSubject allows an initial value to be sent to an observer as they subscribe.\\n<br />\\n<ul>\\n  <li *ngFor=\\\"let data of behaviorSubjectObservableData\\\">{{ data.length }}</li>\\n</ul>\\n\\n<br />\\n<h3>ReplaySubject Observable Data</h3>\\nNote how this stays in sync with everything above even though it subscribes 10 seconds after the subject. That's because it's replaying everything up to that point from a cache it maintains.\\n<br />\\n<ul>\\n  <li *ngFor=\\\"let data of replaySubjectObservableData\\\">{{ data.length }}</li>\\n</ul>\\n\\n<br />\\n<h3>AsyncSubject Observable Data</h3>\\nThis only plays the last item before it completes - nothing before that. It \\\"completes\\\" in the data service once the customers array length is greater than 10. \\n<br />\\n<ul>\\n  <li *ngFor=\\\"let data of asyncSubjectObservableData\\\">{{ data.length }}</li>\\n</ul>\\n<br /><br />\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { SubjectService } from '../core/services/subject.service';\n\n@Component({\n  selector: 'app-subjects',\n  templateUrl: './subjects.component.html',\n  styles: [`\n    .status {\n      color: red;\n    }`\n  ]\n})\nexport class SubjectsComponent implements OnInit, OnDestroy {\n  status: string;\n  subjectObservableData = [];\n  behaviorSubjectObservableData = [];\n  replaySubjectObservableData = [];\n  asyncSubjectObservableData = [];\n  timeoutIds = [];\n\n  subjectSub: Subscription;\n  behaviorSub: Subscription;\n  replaySub: Subscription;\n  asyncSub: Subscription;\n\n  constructor(private subjectService: SubjectService) { }\n\n  ngOnInit() { }\n\n  start() {\n    this.subjectService.start();\n    this.runAction('Calling SubjectService start()', null, null);\n    this.runAction('Subscribing to Subject', ActionType.subject, 2000);\n    this.runAction('Subscribing to BehaviorSubject (6 seconds after subject)', ActionType.behaviorSubject, 8000);\n    this.runAction('Subscribing to ReplaySubject (10 seconds after subject)', ActionType.replaySubject, 13000);\n    this.runAction('Subscribing to AsyncSubject (12 seconds after subject)', ActionType.asyncSubject, 15000);\n  }\n\n  runAction(actionText: string, actionType: ActionType, delay: number) {\n    let action: () => void;\n    switch (actionType) {\n      case ActionType.subject:\n        action = () => {\n          this.subjectSub = this.subjectService.subjectObservable$.subscribe(custs => {\n            this.subjectObservableData.push(custs);\n          })\n        };\n        break;\n\n      case ActionType.behaviorSubject:\n        action = () => {\n          this.behaviorSub = this.subjectService.behaviorSubjectObservable$.subscribe(custs => {\n            this.behaviorSubjectObservableData.push(custs);\n          })\n        };\n        break;\n\n      case ActionType.replaySubject:\n        action = () => {\n          this.replaySub = this.subjectService.replaySubjectObservable$.subscribe(custs => {\n            this.replaySubjectObservableData.push(custs);\n          })\n        };\n        break;\n\n      case ActionType.asyncSubject:\n        action = () => {\n          this.asyncSub = this.subjectService.asyncSubjectObservable$.subscribe(custs => {\n            this.asyncSubjectObservableData.push(custs);\n          })\n        };\n        break;\n    }\n\n    // update status and perform action\n    let timeoutId = setTimeout(() => {\n      this.status = actionText;\n      if (action) {\n        console.log('in')\n        action();\n      }\n    }, (delay) ? delay : 0);\n    this.timeoutIds.push(timeoutId);\n  }\n\n  ngOnDestroy() {\n    if (this.subjectSub) {\n      this.subjectSub.unsubscribe();\n    }\n    if (this.behaviorSub) {\n      this.behaviorSub.unsubscribe();\n    }\n    if (this.replaySub) {\n      this.replaySub.unsubscribe();\n    }\n    if (this.asyncSub) {\n      this.asyncSub.unsubscribe();\n    }\n    for (let id of this.timeoutIds) {\n      clearInterval(id);\n    }\n  }\n\n}\n\nenum ActionType {\n  subject,\n  behaviorSubject,\n  replaySubject,\n  asyncSubject\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubjectsRoutingModule } from './subjects-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SubjectsRoutingModule  \n  ],\n  declarations: [ SubjectsRoutingModule.components ]\n})\nexport class SubjectsModule { }","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}